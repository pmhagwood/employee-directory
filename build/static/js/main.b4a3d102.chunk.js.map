{"version":3,"sources":["components/SearchForm/index.js","components/Table/index.js","utilities/Api.js","App.js","index.js"],"names":["SearchForm","inputRef","React","createRef","state","search","className","htmlFor","type","ref","input","focus","placeholder","onChange","e","props","Component","Table","scope","onClick","toggleSortName","console","log","employees","length","map","employee","i","src","picture","thumbnail","name","first","last","phone","email","moment","dob","date","format","axios","get","App","original","ascending","searchSpace","event","keyword","target","value","setState","filteredEmployees","filter","query","includes","sort","a","b","toLowerCase","localeCompare","Api","then","data","results","this","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4a3d102.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import \"./style.css\";\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\n// function SearchForm(props) {\nclass SearchForm extends Component {\n  constructor() {\n    super();\n    this.inputRef = React.createRef();\n    this.state = {\n      search: null,\n    };\n  }\n\n  // searchSpace = (event) => {\n  //   let keyword = event.target.value;\n  //   this.setState({ search: keyword });\n  //   console.log('keyword : ', keyword);\n  // };\n  render() {\n    return (\n      <>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <form className=\"search\">\n            <div className=\"form-group\">\n              <label htmlFor=\"language\">Search Term:</label>\n              <input\n                // value={this.state.search}\n                // defaultValue=\"\"\n                // onClick={this.sortEmployees}\n                // name=\"term\"\n                // list=\"term\"\n                type=\"text\"\n                ref={(input) => {\n                  // console.log('input:', input);\n                  input && input.focus();\n                }}\n                // className=\"form-control\"\n                placeholder=\"Type in a search term to begin\"\n                // id=\"term\"\n                onChange={(e) => this.props.search(e)}\n                // onChange={(e) => this.searchSpace(e)}\n                // ref={this.inputRef}\n              />\n            </div>\n          </form>\n        </nav>\n      </>\n    );\n  }\n}\nexport default SearchForm;","import React from \"react\"\nimport moment from \"moment\"\n\nconst Table = (props) => {\n\n    return (\n        <>\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Image</th>\n                        <th scope=\"col\" onClick={props.toggleSortName}>Name</th>\n                        <th scope=\"col\">Phone</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">DOB</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {console.log(\"data: \", props.employees)}\n                    {props.employees.length > 0 ? props.employees.map((employee, i) => {\n                        return (\n                            <tr key={i}>\n                            <th scope=\"row\"><img src={employee.picture.thumbnail} /></th>\n                            <td>{employee.name.first + \" \" + employee.name.last}</td>\n                            <td>{employee.phone}</td>\n                            <td>{employee.email}</td>\n                            <td>{moment(employee.dob.date, \"YYYY-MM-DD\").format(\"MM/DD/YYYY\")}</td>\n                        </tr>\n                    \n                        )\n                    }) :  \n                    <tr>\n                        <th scope=\"row\"></th>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                    </tr>\n                     }    \n\n                   \n                      \n                     \n                </tbody>\n            </table>\n        </>\n    );\n}\n\nexport default Table;","import axios from \"axios\"\n\nexport default {\n    getRandomPeople: function() {\n        return axios.get(\"https://randomuser.me/api/?results=10\");\n    }\n}","import React, { Component } from \"react\";\nimport SearchForm from \"./components/SearchForm\";\nimport Table from \"./components/Table\";\nimport Api from \"./utilities/Api\";\n\n\nclass App extends Component  {\n  state = {\n    employees: [],\n    original: [],\n    search: \"\",\n    ascending: false\n  }\n\n  // componentDidMount is part of React. It is a lifecycle method/function. \n  componentDidMount(){\n    Api.getRandomPeople()\n    .then(employees => {\n      this.setState({\n        employees: employees.data.results,\n        original: employees.data.results\n      })\n    });\n  }\n\n  \n  // searchSpace searches based on user typing into the search field in the searchForm component.\n  searchSpace = (event) => {\n    let keyword = event.target.value;\n    this.setState({ search: keyword });\n    console.log('keyword : ', keyword);\n    // want to filter first and last name so we need a function inside filter\n    const filteredEmployees = this.state.original.filter(employee => {\n      // set the query keyword may not be needed. \n      const query = keyword;\n      console.log('inside keyword: ', keyword)\n      // the return allows us to do an \"OR\" statement and get both the first and last name values\n      return (\n        employee.name.last.includes(query) ||\n        employee.name.first.includes(query)\n      )\n    })\n    // const filteredEmployees = this.state.employees.filter(employee => employee.name.last.includes(keyword));\n    \n    this.setState({ employees: filteredEmployees})\n    \n  };\n\n  toggleSortName = () =>{\n    // this is a flag to toggle between true and false\n    if(this.state.ascending){\n      this.setState({\n        employees: this.state.employees.sort((a, b) => b.name.first.toLowerCase().localeCompare(a.name.first.toLowerCase())),\n        ascending: false\n      })\n    }else{\n      this.setState({\n        employees: this.state.employees.sort((a, b) => a.name.first.toLowerCase().localeCompare(b.name.first.toLowerCase())),\n        ascending: true\n      })\n    }\n   \n  }\n\n\n\n  render (){\n    return (\n      <>\n        <div className=\"jumbotron jumbotron-fluid text-center\">\n          <div className=\"container\">\n            <h1 className=\"display-4\">Employee Directory</h1>\n            <p className=\"lead\">Click on carrots to filter by heading or use the search box to narrow your results.</p>\n          </div>\n        </div>\n        <div>\n          <SearchForm employees={this.state.employees} search={this.searchSpace}/>\n          <Table employees={this.state.employees} toggleSortName={this.toggleSortName}/>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}